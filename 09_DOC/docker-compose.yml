version: '3'
services:
  nginx:
    image: nginx
    restart: always
    container_name: nginx
    ports:
      - "81:80"
      - "443:443"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./wwwroot:/home/wwwroot

  mysql:
    image: mysql:5.7
    restart: always
    container_name: mysql
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD: pmkhzspf76pxcmd
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --default-time-zone='+08:00'
      # 开启bin-log 如果启动报mysql-bin.index找不到的错误，需要手动在映射文件夹data中创建binlogs文件夹，在binlogs中创建mysql-bin文件夹和mysql-bin.index文件
      --log-bin=/var/lib/mysql/binlogs/mysql-bin
      --server-id=1
      --max_allowed_packet=128M;
    ports:
      - 3306:3306
    volumes:
      - ./data:/var/lib/mysql
      - ./log:/var/log/mysql
      - ./conf:/etc/mysql

  redis:
    image: redis
    container_name: mysql
    hostname: mysql
    restart: always
    ports:
      - "6379:6379"
    volumes:
        - "${REDIS_DIR}/data:/data" #挂载数据
        - "${REDIS_DIR}/config/redis.conf:/usr/local/etc/redis/redis.conf" #挂载配置文件
        - "${REDIS_DIR}/logs:/logs" #挂载日志
    command:
      		redis-server /usr/local/etc/redis/redis.conf #以配置文件的方式启动

  mongo:
    image: mongo:5.0.7 #根据需要选择自己的镜像
    restart: always
    container_name: MongoDB
    hostname: MongoDB
    ports:
     - 27017:27017 #对外暴露停供服务的端口，正式生产的时候理论不用暴露。
    volumes:
     - /docker/mongodb/data/db:/data/db # 挂载数据目录
     - /docker/mongodb/data/log:/var/log/mongodb  # 挂载日志目录
     - /docker/mongodb/data/config:/etc/mongo  # 挂载配置目录
    # command: --config /docker/mongodb/mongod.conf # 配置文件   

  zoo1:
    image: zookeeper
    restart: always
    container_name: zoo1
    hostname: zoo1
    ports:
      - 2181:2181
    volumes:
      - "./zoo1/data:/data"
      - "./zoo1/datalog:/datalog"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181

  kafka1:
    image: xuxiangwork/kafka
    restart: unless-stopped
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9092:9092"
      - "1099:1099"
    external_links:
      - zoo1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.54:9092    ## 宿主机IP
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2181,zoo3:2181"
      CUSTOM_JMX_PORT: "1099"
      JVM_XMS: "256M"
      JVM_XMX: "512M"
    volumes:
      - "./kafka/kafka1/data/:/kafka"